name: Test Coverage Check

on:
  pull_request:
    types: [labeled]

jobs:
  test-resources:
    # Only run on PRs targeting main labeled with 'run-coverage-tests'
    if: github.base_ref == 'main' && github.event.label.name == 'run-coverage-tests'
    runs-on: ubuntu-latest
    env:
      SHOPIFY_FIXED_ARGS: ${{ secrets.SHOPIFY_FIXED_ARGS }}
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      MIN_COVERAGE_THRESHOLD: '95'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e '.[milvus,shopify,hubspot]' --quiet

      - name: Test with pytest
        run: |
          pytest tests/ --cov=arklex --cov-report=term-missing --cov-report=html --cov-report=xml --no-cov-on-fail

      - name: Check coverage threshold
        run: |
          # Install coverage tool if not already installed
          pip install coverage
          
          # Generate coverage report and extract total coverage
          coverage run -m pytest tests/ --no-cov-on-fail
          coverage xml
          
          # Extract coverage percentage from XML using Python
          python -c "
          import xml.etree.ElementTree as ET
          import os
          
          tree = ET.parse('coverage.xml')
          root = tree.getroot()
          coverage = float(root.attrib['line-rate']) * 100
          print(f'Coverage: {coverage:.1f}%')
          
          # Get minimum coverage threshold from environment variable
          min_coverage = float(os.environ.get('MIN_COVERAGE_THRESHOLD', '95'))
          print(f'Minimum coverage threshold: {min_coverage}%')
          
          if coverage < min_coverage:
              print(f'❌ Coverage ({coverage:.1f}%) is below minimum threshold ({min_coverage}%)')
              print('This PR will be blocked until coverage is improved.')
              exit(1)
          else:
              print(f'✅ Coverage ({coverage:.1f}%) meets minimum threshold ({min_coverage}%)')
          "

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

      - name: Upload HTML coverage report
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov/

      - name: Display coverage
        uses: py-cov-action/python-coverage-comment-action@v3
        with:
          GITHUB_TOKEN: ${{ github.token }}
          MINIMUM_GREEN: 98
          MINIMUM_ORANGE: 70
