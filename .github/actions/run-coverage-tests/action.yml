name: 'Run Tests and Check Coverage'
description: 'Run tests with coverage and check against minimum threshold'

inputs:
  coverage-command:
    description: 'Command to run tests with coverage'
    required: false
    default: 'pytest tests/ --cov=arklex --cov-report=term-missing --cov-report=html --cov-report=xml --no-cov-on-fail'
  min-coverage-threshold:
    description: 'Minimum coverage percentage to pass'
    required: false
    default: '99.1'
  checkout-repo:
    description: 'Whether to checkout the repository (set to false if already checked out)'
    required: false
    default: 'true'

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      if: inputs.checkout-repo == 'true'
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Python
      if: inputs.checkout-repo == 'true'
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      if: inputs.checkout-repo == 'true'
      shell: bash
      run: |
        python -m pip install --upgrade pip
        pip install -e '.[milvus,shopify,hubspot]' --quiet

    - name: Run tests and generate coverage reports
      id: coverage-check
      shell: bash
      env:
        MIN_COVERAGE_THRESHOLD: ${{ inputs.min-coverage-threshold }}
        ARKLEX_TEST_ENV: 'local'
      run: |
        ${{ inputs.coverage-command }}

        # Check if coverage.xml exists, if not try to generate it
        if [ ! -f "coverage.xml" ] && [ -f ".coverage" ]; then
          coverage xml
        fi

        # Verify coverage.xml was generated
        if [ ! -f "coverage.xml" ]; then
          echo "❌ coverage.xml was not generated"
          exit 1
        fi

        echo "✅ Coverage reports generated successfully"
